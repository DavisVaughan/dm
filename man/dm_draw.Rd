% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw-dm.R
\name{dm_draw}
\alias{dm_draw}
\alias{dm_set_colors}
\alias{dm_get_colors}
\alias{dm_get_available_colors}
\title{Draw schema of a \code{\link{dm}}-object's data model}
\usage{
dm_draw(dm, rankdir = "LR", col_attr = "column",
  view_type = "keys_only", columnArrows = TRUE, graph_attrs = "",
  node_attrs = "", edge_attrs = "", focus = NULL,
  graph_name = "Data Model")

dm_set_colors(dm, ...)

dm_get_colors(dm)

dm_get_available_colors()
}
\arguments{
\item{dm}{A \code{\link{dm}} object}

\item{rankdir}{Graph attribute for direction (eg. 'BT' = bottom --> top)}

\item{col_attr}{Column atributes to display.
Only column name (\code{column}) is included by default.}

\item{view_type}{Can be "keys_only" (default), "all" or "title_only".
It defines the level of details for the table rendering
(only primary and foreign keys, all columns or no columns)}

\item{columnArrows}{Edges from column to column (default: FALSE)}

\item{graph_attrs}{Additional graph attributes}

\item{node_attrs}{Additional node attributes}

\item{edge_attrs}{Additional edge attributes}

\item{focus}{A list of parameters for rendering (table filter)}

\item{graph_name}{A graph name}

\item{...}{Colors to set in the form \code{table = "<color>"} . Fall-through syntax similarly to
\code{\link[=switch]{switch()}} is supported: \code{table1 = , table2 = "<color>"} sets the color for both \code{table1}
and \code{table2} . This argument supports splicing.}
}
\value{
For \code{dm_set_colors()}: the updated data model.

For \code{dm_get_colors()}, a two-column tibble with one row per table.

For \code{dm_get_available_colors()}, a tibble with the color in the first
column and auxiliary information in other columns.
}
\description{
\code{dm_draw()} draws a schema of the data model using \code{datamodelr} (which in turn uses \code{DiagrammeR}).

\code{dm_set_colors()} allows to define the colors in which to display the tables of the data model.

\code{dm_get_colors()} returns the colors defined for a data model.

\code{dm_get_available_colors()} returns an overview of the available colors and their names
as a tibble.
}
\examples{
library(dplyr)
dm_draw(dm_nycflights13())
dm_draw(dm_nycflights13(cycle = TRUE))
dm_nycflights13(color = FALSE) \%>\%
  dm_set_colors(
    airports = ,
    airlines = ,
    planes = "yellow",
    weather = "dark_blue"
  ) \%>\%
  dm_draw()

# Splicing is supported:
new_colors <- c(
  airports = "yellow", airlines = "yellow", planes = "yellow",
  weather = "dark_blue"
)
dm_nycflights13(color = FALSE) \%>\%
  dm_set_colors(!!!new_colors) \%>\%
  dm_draw()
}
